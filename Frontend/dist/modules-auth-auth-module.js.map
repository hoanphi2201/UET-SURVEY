{"version":3,"sources":["./src/app/modules/auth/pages/login/login.component.html","./src/app/modules/auth/pages/sign-up/sign-up.component.html","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/auth.routing.ts","./src/app/modules/auth/pages/login/login.component.less","./src/app/modules/auth/pages/login/login.component.ts","./src/app/modules/auth/pages/sign-up/sign-up.component.less","./src/app/modules/auth/pages/sign-up/sign-up.component.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-module.js","sourcesContent":["module.exports = \"<div class=\\\"row align-items-center\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <nz-card>\\n      <h2 class=\\\"m-t-20\\\" translate>default.layout.SIGN_IN</h2>\\n      <p class=\\\"m-b-30\\\" translate>\\n        default.layout.ENTER_YOUR_CREDENTIAL_TO_GET_ACCESS\\n      </p>\\n      <form\\n        class=\\\"login-form\\\"\\n        [formGroup]=\\\"loginForm\\\"\\n        (ngSubmit)=\\\"onLogin()\\\"\\n        novalidate\\n        nz-form\\n      >\\n        <nz-form-item>\\n          <nz-form-label nzFor=\\\"userName\\\" nzRequired\\n            >{{ \\\"default.layout.USERNAME\\\" | translate }}\\n          </nz-form-label>\\n          <nz-form-control\\n            [ngClass]=\\\"{ 'has-error': isFieldValid(loginForm, 'userName') }\\\"\\n          >\\n            <nz-input-group [nzPrefix]=\\\"prefixUsername\\\">\\n              <input\\n                tabindex=\\\"1\\\"\\n                formControlName=\\\"userName\\\"\\n                type=\\\"text\\\"\\n                nz-input\\n                [placeholder]=\\\"'default.layout.ENTER_YOUR_USERNAME' | translate\\\"\\n              />\\n            </nz-input-group>\\n            <field-error-display\\n              [displayError]=\\\"isFieldValid(loginForm, 'userName')\\\"\\n              [errors]=\\\"f.userName.errors\\\"\\n            ></field-error-display>\\n            <ng-template #prefixUsername\\n              ><i nz-icon nzType=\\\"user\\\"></i\\n            ></ng-template>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label nzFor=\\\"password\\\" nzRequired\\n            >{{ \\\"default.layout.PASSWORD\\\" | translate }}\\n          </nz-form-label>\\n          <a class=\\\"float-right p-t-10 text-muted\\\"\\n            >{{ \\\"default.layout.FORGET_PASSWORD\\\" | translate }} ?</a\\n          >\\n          <nz-form-control\\n            [ngClass]=\\\"{ 'has-error': isFieldValid(loginForm, 'password') }\\\"\\n          >\\n            <nz-input-group [nzPrefix]=\\\"prefixPassword\\\">\\n              <input\\n                tabindex=\\\"2\\\"\\n                formControlName=\\\"password\\\"\\n                type=\\\"password\\\"\\n                autocomplete=\\\"password\\\"\\n                nz-input\\n                [placeholder]=\\\"'default.layout.ENTER_YOUR_PASSWORD' | translate\\\"\\n              />\\n            </nz-input-group>\\n            <field-error-display\\n              [displayError]=\\\"isFieldValid(loginForm, 'password')\\\"\\n              [errors]=\\\"f.password.errors\\\"\\n            ></field-error-display>\\n            <ng-template #prefixPassword\\n              ><i nz-icon nzType=\\\"lock\\\"></i\\n            ></ng-template>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-control>\\n            <div class=\\\"d-flex align-items-center justify-content-between\\\">\\n              <span class=\\\" text-muted\\\">\\n                {{ \\\"default.layout.DONT_HAVE_AN_ACCOUNT\\\" | translate }} ?\\n                <a [routerLink]=\\\"['/auth', 'signup']\\\" translate\\n                  >default.layout.SIGN_UP_HERE</a\\n                >\\n              </span>\\n              <button\\n                tabindex=\\\"3\\\"\\n                type=\\\"submit\\\"\\n                class=\\\"login-form-button\\\"\\n                [nzType]=\\\"'primary'\\\"\\n                nz-button\\n              >\\n                {{ \\\"default.layout.SIGN_IN\\\" | translate }}\\n              </button>\\n            </div>\\n          </nz-form-control>\\n        </nz-form-item>\\n      </form>\\n    </nz-card>\\n  </div>\\n  <div class=\\\"offset-md-1 col-md-6 d-none d-md-block\\\">\\n    <img alt=\\\"\\\" class=\\\"img-fluid\\\" src=\\\"./assets/images/others/login-2.png\\\" />\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"row align-items-center\\\">\\n  <div class=\\\"col-md-6 d-none d-md-block\\\">\\n    <img alt=\\\"\\\" class=\\\"img-fluid\\\" src=\\\"./assets/images/others/sign-up-2.png\\\" />\\n  </div>\\n  <div class=\\\"m-l-auto col-md-5\\\">\\n    <nz-card>\\n      <h2 class=\\\"m-t-20\\\" translate>default.layout.SIGN_UP</h2>\\n      <p class=\\\"m-b-30\\\" translate>\\n        default.layout.CREATE_YOUR_ACCOUNT_TO_GET_ACCESS\\n      </p>\\n      <form\\n        [formGroup]=\\\"signUpForm\\\"\\n        (ngSubmit)=\\\"onSignUp(signUpForm)\\\"\\n        novalidate\\n        nz-form\\n      >\\n        <nz-form-item>\\n          <nz-form-label nzFor=\\\"userName\\\" nzRequired>{{\\n            \\\"default.layout.USERNAME\\\" | translate\\n          }}</nz-form-label>\\n          <nz-form-control\\n            [ngClass]=\\\"{ 'has-error': isFieldValid(signUpForm, 'userName') }\\\"\\n          >\\n            <input\\n              formControlName=\\\"userName\\\"\\n              id=\\\"userName\\\"\\n              nz-input\\n              [placeholder]=\\\"'default.layout.ENTER_YOUR_USERNAME' | translate\\\"\\n              type=\\\"text\\\"\\n            />\\n          </nz-form-control>\\n          <field-error-display\\n            [displayError]=\\\"isFieldValid(signUpForm, 'userName')\\\"\\n            [errors]=\\\"f.userName.errors\\\"\\n          ></field-error-display>\\n        </nz-form-item>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <nz-form-item>\\n              <nz-form-label nzFor=\\\"firstName\\\" nzRequired>{{\\n                \\\"default.layout.FIRST_NAME\\\" | translate\\n              }}</nz-form-label>\\n              <nz-form-control\\n                [ngClass]=\\\"{\\n                  'has-error': isFieldValid(signUpForm, 'firstName')\\n                }\\\"\\n              >\\n                <input\\n                  formControlName=\\\"firstName\\\"\\n                  id=\\\"firstName\\\"\\n                  nz-input\\n                  [placeholder]=\\\"\\n                    'default.layout.ENTER_YOUR_FIRST_NAME' | translate\\n                  \\\"\\n                  type=\\\"text\\\"\\n                />\\n              </nz-form-control>\\n              <field-error-display\\n                [displayError]=\\\"isFieldValid(signUpForm, 'firstName')\\\"\\n                [errors]=\\\"f.firstName.errors\\\"\\n              ></field-error-display>\\n            </nz-form-item>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <nz-form-item>\\n              <nz-form-label nzFor=\\\"lastName\\\" nzRequired>{{\\n                \\\"default.layout.LAST_NAME\\\" | translate\\n              }}</nz-form-label>\\n              <nz-form-control\\n                [ngClass]=\\\"{\\n                  'has-error': isFieldValid(signUpForm, 'lastName')\\n                }\\\"\\n              >\\n                <input\\n                  formControlName=\\\"lastName\\\"\\n                  id=\\\"lastName\\\"\\n                  nz-input\\n                  [placeholder]=\\\"\\n                    'default.layout.ENTER_YOUR_LAST_NAME' | translate\\n                  \\\"\\n                  type=\\\"text\\\"\\n                />\\n              </nz-form-control>\\n              <field-error-display\\n                [displayError]=\\\"isFieldValid(signUpForm, 'lastName')\\\"\\n                [errors]=\\\"f.lastName.errors\\\"\\n              ></field-error-display>\\n            </nz-form-item>\\n          </div>\\n        </div>\\n\\n        <nz-form-item>\\n          <nz-form-label nzFor=\\\"email\\\" nzRequired\\n            >{{ \\\"default.layout.EMAIL\\\" | translate }}\\n          </nz-form-label>\\n          <nz-form-control\\n            [ngClass]=\\\"{ 'has-error': isFieldValid(signUpForm, 'email') }\\\"\\n          >\\n            <input\\n              formControlName=\\\"email\\\"\\n              id=\\\"email\\\"\\n              nz-input\\n              [placeholder]=\\\"'default.layout.ENTER_YOUR_EMAIL' | translate\\\"\\n              type=\\\"text\\\"\\n            />\\n          </nz-form-control>\\n          <field-error-display\\n            [displayError]=\\\"isFieldValid(signUpForm, 'email')\\\"\\n            [errors]=\\\"f.email.errors\\\"\\n          ></field-error-display>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label nzFor=\\\"password\\\" nzRequired>\\n            {{ \\\"default.layout.PASSWORD\\\" | translate }}\\n          </nz-form-label>\\n          <nz-form-control\\n            [ngClass]=\\\"{ 'has-error': isFieldValid(signUpForm, 'password') }\\\"\\n          >\\n            <input\\n              formControlName=\\\"password\\\"\\n              id=\\\"password\\\"\\n              autocomplete=\\\"password\\\"\\n              nz-input\\n              [placeholder]=\\\"'default.layout.ENTER_YOUR_PASSWORD' | translate\\\"\\n              type=\\\"password\\\"\\n            />\\n          </nz-form-control>\\n          <field-error-display\\n            [displayError]=\\\"isFieldValid(signUpForm, 'password')\\\"\\n            [errors]=\\\"f.password.errors\\\"\\n          ></field-error-display>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label nzFor=\\\"checkPassword\\\" nzRequired>\\n            {{ \\\"default.layout.CONFIRM_PASSWORD\\\" | translate }}\\n          </nz-form-label>\\n          <nz-form-control\\n            [ngClass]=\\\"{\\n              'has-error': isFieldValid(signUpForm, 'confirmPassword')\\n            }\\\"\\n          >\\n            <input\\n              formControlName=\\\"confirmPassword\\\"\\n              id=\\\"checkPassword\\\"\\n              autocomplete=\\\"confirmPassword\\\"\\n              nz-input\\n              [placeholder]=\\\"\\n                'default.layout.ENTER_CONFIRM_PASSWORD' | translate\\n              \\\"\\n              type=\\\"password\\\"\\n            />\\n          </nz-form-control>\\n          <field-error-display\\n            [displayError]=\\\"isFieldValid(signUpForm, 'confirmPassword')\\\"\\n            [errors]=\\\"f.confirmPassword.errors\\\"\\n          ></field-error-display>\\n        </nz-form-item>\\n        <div class=\\\"d-flex align-items-center justify-content-between\\\">\\n          <nz-form-item>\\n            <nz-form-control\\n              [ngClass]=\\\"{ 'has-error': isFieldValid(signUpForm, 'agree') }\\\"\\n            >\\n              <label nz-checkbox formControlName=\\\"agree\\\"\\n                >I have read the <a>agreement</a></label\\n              >\\n            </nz-form-control>\\n            <field-error-display\\n              [displayError]=\\\"isFieldValid(signUpForm, 'agree')\\\"\\n              [errors]=\\\"f.agree.errors\\\"\\n            ></field-error-display>\\n          </nz-form-item>\\n          <nz-form-item>\\n            <nz-form-control>\\n              <button\\n                type=\\\"submit\\\"\\n                class=\\\"login-form-button\\\"\\n                [nzType]=\\\"'primary'\\\"\\n                nz-button\\n              >\\n                <span translate>default.layout.SIGN_UP</span>\\n              </button>\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </form>\\n    </nz-card>\\n    <div class=\\\"signup-bottom\\\">\\n      <span class=\\\"parse-html\\\"\\n        >{{ \\\"default.layout.ALREADY_ON\\\" | translate }} UetSurvey?\\n        {{ \\\"default.layout.LET_US_TAKE_YOU_TO\\\" | translate }}\\n        <a [routerLink]=\\\"['/auth', 'login']\\\">Sign In!</a>\\n      </span>\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from \"@angular/core\";\nimport { SharedModule } from \"@app/shared\";\nimport { LoginComponent } from \"./pages/login/login.component\";\nimport { SignUpComponent } from \"./pages/sign-up/sign-up.component\";\nimport { AuthRouting } from \"./auth.routing\";\n@NgModule({\n  imports: [SharedModule, AuthRouting],\n  declarations: [LoginComponent, SignUpComponent]\n})\nexport class AuthModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LoginComponent } from \"./pages/login/login.component\";\nimport { SignUpComponent } from \"./pages/sign-up/sign-up.component\";\nimport { extract } from \"@app/core\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"/auth/login\",\n    pathMatch: \"full\"\n  },\n  {\n    path: \"\",\n    children: [\n      {\n        path: \"login\",\n        component: LoginComponent,\n        data: { title: extract(\"Log in to your account\") }\n      },\n      {\n        path: \"signup\",\n        component: SignUpComponent,\n        data: { title: extract(\"Sign up for a FREE SurveyMonkey account\") }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRouting {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYXV0aC9wYWdlcy9sb2dpbi9sb2dpbi5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { I18nService, AuthService, IValidators } from \"@app/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { LoaderService, Helpers } from \"@app/shared\";\nimport { NzMessageService } from \"ng-zorro-antd\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.less\"]\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: string;\n  constructor(\n    private i18nService: I18nService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private loaderService: LoaderService,\n    private nzMessageService: NzMessageService\n  ) {\n    if (this.authService.isLoggedIn()) {\n      this.router.navigateByUrl(\n        this.route.snapshot.queryParams[\"returnUrl\"] || \"/dashboard\"\n      );\n    }\n    this.buildForm();\n  }\n\n  ngOnInit() {\n    this.returnUrl =\n      this.route.snapshot.queryParams[\"returnUrl\"] || \"/dashboard\";\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  isFieldValid(form: FormGroup, field: string) {\n    return !form.get(field).valid && form.get(field).dirty;\n  }\n\n  onLogin() {\n    if (this.loginForm.invalid) {\n      Helpers.validateAllFormFields(this.loginForm);\n      return;\n    }\n    this.loaderService.display(true);\n    this.authService.login(this.loginForm.value).subscribe(\n      res => {\n        this.nzMessageService.success(\"Login success\");\n        this.router.navigate(\n          [this.route.snapshot.queryParams.redirect || \"/dashboard\"],\n          { replaceUrl: true }\n        );\n      },\n      err => {\n        this.loaderService.display(false);\n        this.nzMessageService.error(err.message);\n      },\n      () => {\n        this.loaderService.display(false);\n      }\n    );\n  }\n\n  setLanguage(language: string) {\n    this.i18nService.language = language;\n  }\n\n  get currentLanguage(): string {\n    return this.i18nService.language;\n  }\n\n  get languages(): string[] {\n    return this.i18nService.supportedLanguages;\n  }\n\n  private buildForm(): void {\n    this.loginForm = this.formBuilder.group({\n      userName: [\"\", [Validators.required, IValidators.spaceStringValidator()]],\n      password: [\"\", Validators.required]\n    });\n  }\n  ngOnDestroy() {}\n}\n","module.exports = \".signup-bottom {\\n  line-height: 40px;\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waGl4dWFuaG9hbi9EZXNpZ24tV2ViLzUuIEFuZ3VsYXIvRHVBbi9Qcml2YXRlLVVFVC1TVVJWRVkvRnJvbnRlbmQvc3JjL2FwcC9tb2R1bGVzL2F1dGgvcGFnZXMvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9tb2R1bGVzL2F1dGgvcGFnZXMvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hdXRoL3BhZ2VzL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWdudXAtYm90dG9tIHtcbiAgICBsaW5lLWhlaWdodDogNDBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59IiwiLnNpZ251cC1ib3R0b20ge1xuICBsaW5lLWhlaWdodDogNDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { IValidators, AuthService } from \"@app/core\";\nimport { Helpers, LoaderService } from \"@app/shared\";\nimport { NzMessageService } from \"ng-zorro-antd\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-sign-up\",\n  templateUrl: \"./sign-up.component.html\",\n  styleUrls: [\"./sign-up.component.less\"]\n})\nexport class SignUpComponent implements OnInit {\n  signUpForm: FormGroup;\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private loaderService: LoaderService,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private nzMessageService: NzMessageService\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  get f() {\n    return this.signUpForm.controls;\n  }\n\n  isFieldValid(form: FormGroup, field: string) {\n    return !form.get(field).valid && form.get(field).dirty;\n  }\n\n  private buildForm(): void {\n    this.signUpForm = this.formBuilder.group(\n      {\n        userName: [\n          \"\",\n          [\n            Validators.required,\n            IValidators.spaceStringValidator(),\n            Validators.minLength(6),\n            Validators.maxLength(100)\n          ]\n        ],\n        firstName: [\n          \"\",\n          [\n            Validators.required,\n            IValidators.spaceStringValidator(),\n            Validators.maxLength(100)\n          ]\n        ],\n        lastName: [\n          \"\",\n          [\n            Validators.required,\n            IValidators.spaceStringValidator(),\n            Validators.maxLength(100)\n          ]\n        ],\n        password: [\n          \"\",\n          [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(100)\n          ]\n        ],\n        email: [\"\", [Validators.required, IValidators.emailValidator()]],\n        confirmPassword: [\"\", Validators.compose([Validators.required])],\n        agree: [null, [Validators.required]]\n      },\n      {\n        validator: IValidators.passwordMatchValidator\n      }\n    );\n  }\n\n  onSignUp(formData: FormGroup) {\n    if (formData.invalid || !formData.controls.agree.value) {\n      Helpers.validateAllFormFields(formData);\n      return;\n    }\n    this.loaderService.display(true);\n    Object.keys(formData.value).forEach(key => {\n      if (Helpers.isString(formData.value[key])) {\n        formData.value[key] = formData.value[key].trim();\n      }\n    });\n    this.authService.signup(formData.value).subscribe(\n      res => {\n        if (res.status.code === 200) {\n          this.nzMessageService.success(\n            this.translateService.instant(res.status.message)\n          );\n          this.router.navigate([\"/auth\", \"login\"]);\n        }\n      },\n      err => {\n        this.loaderService.display(false);\n        this.nzMessageService.error(this.translateService.instant(err.message));\n      },\n      () => {\n        this.loaderService.display(false);\n      }\n    );\n  }\n}\n"],"sourceRoot":""}